{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\cjsal\\\\Documents\\\\2. UAI\\\\Informatica\\\\Ingenieria de software\\\\Ingenieria-Software\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport Header from \"./components/Header\";\nimport Footer from \"./components/Footer\";\nimport ChileMap from \"./components/ChileMap\";\nimport SensorAlerts from \"./components/SensorAlerts\";\nimport SensorDetail from \"./components/SensorDetail\";\nimport { defaultSensors } from \"./mock/sensors\";\nimport \"./App.css\";\n\n// 🧠 Determina el estado según el valor\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst determineStatus = value => {\n  if (value < 30) return \"critical\";\n  if (value < 60) return \"warning\";\n  return \"normal\";\n};\n\n// 🔁 Asigna estado dinámico a sensores\nconst applyStatusToSensors = sensorList => sensorList.map(s => ({\n  ...s,\n  status: determineStatus(s.value)\n}));\nconst App = () => {\n  _s();\n  const [sensors, setSensors] = useState(applyStatusToSensors(defaultSensors));\n  const [selectedSensor, setSelectedSensor] = useState(null);\n  const handleSelectSensor = sensor => setSelectedSensor(sensor);\n  const handleCloseDetail = () => setSelectedSensor(null);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"h-screen w-screen bg-gradient-to-br from-blue-50 via-indigo-50 to-purple-50 flex flex-col overflow-hidden\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"flex-grow flex flex-col lg:flex-row justify-center items-stretch gap-6 px-6 pb-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-full lg:w-1/2 h-[calc(100vh-200px)] lg:h-[80vh] relative\",\n        children: /*#__PURE__*/_jsxDEV(ChileMap, {\n          sensors: sensors,\n          onSelectSensor: handleSelectSensor\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-full lg:w-1/2 h-[calc(100vh-200px)] lg:h-[80vh] overflow-y-auto rounded-3xl border border-gray-200 shadow-lg bg-white\",\n        children: /*#__PURE__*/_jsxDEV(SensorAlerts, {\n          sensors: sensors,\n          onSelectSensor: handleSelectSensor\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), selectedSensor && /*#__PURE__*/_jsxDEV(SensorDetail, {\n      sensor: selectedSensor,\n      onClose: handleCloseDetail\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"kIAdw57XaR6iJLVMCrpRD4deL+Y=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Header","Footer","ChileMap","SensorAlerts","SensorDetail","defaultSensors","jsxDEV","_jsxDEV","determineStatus","value","applyStatusToSensors","sensorList","map","s","status","App","_s","sensors","setSensors","selectedSensor","setSelectedSensor","handleSelectSensor","sensor","handleCloseDetail","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSelectSensor","onClose","_c","$RefreshReg$"],"sources":["C:/Users/cjsal/Documents/2. UAI/Informatica/Ingenieria de software/Ingenieria-Software/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport Header from \"./components/Header\";\nimport Footer from \"./components/Footer\";\nimport ChileMap from \"./components/ChileMap\";\nimport SensorAlerts from \"./components/SensorAlerts\";\nimport SensorDetail from \"./components/SensorDetail\";\nimport { defaultSensors } from \"./mock/sensors\";\nimport \"./App.css\";\n\n// 🧠 Determina el estado según el valor\nconst determineStatus = (value) => {\n  if (value < 30) return \"critical\";\n  if (value < 60) return \"warning\";\n  return \"normal\";\n};\n\n// 🔁 Asigna estado dinámico a sensores\nconst applyStatusToSensors = (sensorList) =>\n  sensorList.map((s) => ({ ...s, status: determineStatus(s.value) }));\n\nconst App = () => {\n  const [sensors, setSensors] = useState(applyStatusToSensors(defaultSensors));\n  const [selectedSensor, setSelectedSensor] = useState(null);\n\n  const handleSelectSensor = (sensor) => setSelectedSensor(sensor);\n  const handleCloseDetail = () => setSelectedSensor(null);\n\n  return (\n    <div className=\"h-screen w-screen bg-gradient-to-br from-blue-50 via-indigo-50 to-purple-50 flex flex-col overflow-hidden\">\n      <Header />\n\n      {/* Contenido principal */}\n      <main className=\"flex-grow flex flex-col lg:flex-row justify-center items-stretch gap-6 px-6 pb-6\">\n        <div className=\"w-full lg:w-1/2 h-[calc(100vh-200px)] lg:h-[80vh] relative\">\n          <ChileMap sensors={sensors} onSelectSensor={handleSelectSensor} />\n        </div>\n\n        <div className=\"w-full lg:w-1/2 h-[calc(100vh-200px)] lg:h-[80vh] overflow-y-auto rounded-3xl border border-gray-200 shadow-lg bg-white\">\n          <SensorAlerts sensors={sensors} onSelectSensor={handleSelectSensor} />\n        </div>\n      </main>\n\n      {selectedSensor && (\n        <SensorDetail sensor={selectedSensor} onClose={handleCloseDetail} />\n      )}\n\n      <Footer />\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,OAAOC,YAAY,MAAM,2BAA2B;AACpD,OAAOC,YAAY,MAAM,2BAA2B;AACpD,SAASC,cAAc,QAAQ,gBAAgB;AAC/C,OAAO,WAAW;;AAElB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,eAAe,GAAIC,KAAK,IAAK;EACjC,IAAIA,KAAK,GAAG,EAAE,EAAE,OAAO,UAAU;EACjC,IAAIA,KAAK,GAAG,EAAE,EAAE,OAAO,SAAS;EAChC,OAAO,QAAQ;AACjB,CAAC;;AAED;AACA,MAAMC,oBAAoB,GAAIC,UAAU,IACtCA,UAAU,CAACC,GAAG,CAAEC,CAAC,KAAM;EAAE,GAAGA,CAAC;EAAEC,MAAM,EAAEN,eAAe,CAACK,CAAC,CAACJ,KAAK;AAAE,CAAC,CAAC,CAAC;AAErE,MAAMM,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGnB,QAAQ,CAACW,oBAAoB,CAACL,cAAc,CAAC,CAAC;EAC5E,MAAM,CAACc,cAAc,EAAEC,iBAAiB,CAAC,GAAGrB,QAAQ,CAAC,IAAI,CAAC;EAE1D,MAAMsB,kBAAkB,GAAIC,MAAM,IAAKF,iBAAiB,CAACE,MAAM,CAAC;EAChE,MAAMC,iBAAiB,GAAGA,CAAA,KAAMH,iBAAiB,CAAC,IAAI,CAAC;EAEvD,oBACEb,OAAA;IAAKiB,SAAS,EAAC,2GAA2G;IAAAC,QAAA,gBACxHlB,OAAA,CAACP,MAAM;MAAA0B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAGVtB,OAAA;MAAMiB,SAAS,EAAC,kFAAkF;MAAAC,QAAA,gBAChGlB,OAAA;QAAKiB,SAAS,EAAC,4DAA4D;QAAAC,QAAA,eACzElB,OAAA,CAACL,QAAQ;UAACe,OAAO,EAAEA,OAAQ;UAACa,cAAc,EAAET;QAAmB;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC/D,CAAC,eAENtB,OAAA;QAAKiB,SAAS,EAAC,yHAAyH;QAAAC,QAAA,eACtIlB,OAAA,CAACJ,YAAY;UAACc,OAAO,EAAEA,OAAQ;UAACa,cAAc,EAAET;QAAmB;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC,EAENV,cAAc,iBACbZ,OAAA,CAACH,YAAY;MAACkB,MAAM,EAAEH,cAAe;MAACY,OAAO,EAAER;IAAkB;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CACpE,eAEDtB,OAAA,CAACN,MAAM;MAAAyB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACP,CAAC;AAEV,CAAC;AAACb,EAAA,CA7BID,GAAG;AAAAiB,EAAA,GAAHjB,GAAG;AA+BT,eAAeA,GAAG;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}